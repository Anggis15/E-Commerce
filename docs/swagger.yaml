definitions:
  controller.userInput:
    type: object
  models.Products:
    properties:
      category:
        type: string
      createdAt:
        type: string
      descProduct:
        type: string
      gender:
        type: string
      id:
        type: integer
      images:
        type: string
      isActive:
        type: integer
      price:
        type: integer
      productName:
        type: string
      promotion:
        items:
          $ref: '#/definitions/models.Promotion'
        type: array
      stock:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.Promotion:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: integer
      productsId:
        type: integer
      promo:
        type: integer
      promoDesc:
        type: string
      promoName:
        type: string
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      isActive:
        type: integer
      name:
        type: string
      password:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Products'
        type: array
      role:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /users:
    get:
      description: Get a list of Users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all Users.
      tags:
      - Users
    post:
      description: Creating a new User.
      parameters:
      - description: the body to create a new users
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.userInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create New User.
      tags:
      - User
  /users/{id}:
    delete:
      description: Delete a User by id.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one User.
      tags:
      - User
    get:
      description: Get an User by id.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user.
      tags:
      - User
    patch:
      description: Update User by id.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.userInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update User.
      tags:
      - User
swagger: "2.0"
